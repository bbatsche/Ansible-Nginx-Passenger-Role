---
- name: Add Phusion Passenger APT Key
  apt_key: keyserver=keyserver.ubuntu.com id=561F9B9CAC40B2F7 state=present
  become: yes

- name: Add Phusion Passenger APT Repository
  apt_repository:
    repo: deb https://oss-binaries.phusionpassenger.com/apt/passenger {{ ansible_distribution_release }} main
    state: present
  become: yes

- name: Install
  apt: name={{ item }} state=present
  become: yes
  with_items: "{{ passenger_apt_packages[ansible_distribution_release] }}"

- name: Enable Passenger Module
  file:
    src: /usr/share/nginx/modules-available/mod-http-passenger.load
    dest: /etc/nginx/modules-enabled/50-mod-http-passenger.conf
    state: link
  become: yes
  when: ansible_distribution_release == "bionic"

- name: Create HTML5 Boilerplate Config Directories
  file: path=/etc/nginx/{{ item }} state=directory
  become: yes
  with_items:
    - h5bp
    - h5bp/directive-only
    - h5bp/location

- name: Copy Nginx Coniguration
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  become: yes
  notify: Restart Nginx

- name: Copy HTML5 Boilerplate Basic Config
  template: src=h5bp.conf.j2 dest=/etc/nginx/h5bp/basic.conf
  become: yes
  notify: Restart Nginx

# Make sure we overwrite the default Nginx mime.types with H5BP version
- name: Copy mime.types
  copy: src=mime.types dest=/etc/nginx/h5bp/mime.types
  become: yes
  notify: Restart Nginx

- name: Copy HTML5 Boilerplate Files
  get_url:
    url:  https://raw.githubusercontent.com/h5bp/server-configs-nginx/{{ h5bp_commit }}/h5bp/{{ item }}
    dest: /etc/nginx/h5bp/{{ item }}
  become: yes
  notify: Restart Nginx
  with_items:
    - directive-only/cache-file-descriptors.conf
    - directive-only/cross-domain-insecure.conf
    - directive-only/extra-security.conf
    - directive-only/no-transform.conf
    - directive-only/ssl-stapling.conf
    - directive-only/x-ua-compatible.conf
    - location/cache-busting.conf
    - location/cross-domain-fonts.conf
    - location/protect-system-files.conf

# Maintain our own version of expires.conf since it does a better job handling Expires & Cache-Control headers
- name: Copy Expires Config
  copy: src=expires.conf dest=/etc/nginx/h5bp/location/expires.conf
  become: yes
  notify: Restart Nginx

# More secure SSL configuration than H5BP's defaults
- name: Copy SSL Config
  copy: src=ssl.conf dest=/etc/nginx/h5bp/directive-only/ssl.conf
  become: yes
  notify: Restart Nginx

- name: Create Default Site
  template: src=site.default.conf.j2 dest=/etc/nginx/sites-available/default
  become: yes
  notify: Restart Nginx

- name: Enable Default Site
  file:
    src:   /etc/nginx/sites-available/default
    dest:  /etc/nginx/sites-enabled/00-default
    state: link
  become: yes
  notify: Restart Nginx

- name: Remove Previous Default Site Link
  file: name=/etc/nginx/sites-enabled/default state=absent
  become: yes
  notify: Restart Nginx

- name: Set Permissions for Site Config Directories
  file:
    path:  /etc/nginx/{{ item }}
    state: directory
    owner: root
    group: web-admin
    mode:  02770
  become: yes
  with_items:
    - sites-available
    - sites-enabled
    - conf.d

- name: Create ACL for Site Config Directories
  acl:
    name:        /etc/nginx/{{ item }}
    etype:       group
    entity:      web-admin
    permissions: rwx
    state:       present
  become: yes
  with_items:
    - sites-available
    - sites-enabled

- name: Create Log Directory
  file:
    path:  /var/log/nginx
    state: directory
    owner: www-data
    group: www-data
    mode:  0750
  become: yes

- name: Create HTTP Root
  file: path={{ http_root }} state=directory mode=02775
  become: yes

# If HTTP root is an NFS mount we need to skip various ACL and permission related tasks
# Disable warnings since Ansible's stat module doesn't return any info about the FS type
- name: Check HTTP Root Filesystem
  command: stat -f -c %T {{ http_root }} warn=no
  register: http_root_fs
  changed_when: no

- include_tasks: http_root_acl.yml
  when:
    - http_root_fs.stdout != "nfs"
    - http_root_fs.stdout != "vmhgfs"
    - http_root_fs.stdout != "vboxsf"
    - http_root_fs.stdout != "prl_fs"
    - http_root_fs.stdout != "fuseblk"

- include_tasks: ssl.yml
  when: use_ssl

- include_tasks: site.yml
  when: domain is defined
