---
- name: Add Phusion Passenger APT Key
  apt_key: keyserver=keyserver.ubuntu.com id=561F9B9CAC40B2F7 state=present
  become: yes

- name: Add Phusion Passenger APT Repository
  apt_repository:
    repo: "deb https://oss-binaries.phusionpassenger.com/apt/passenger trusty main"
    state: present
  become: yes

- name: Install
  apt: name={{ item }} state=present
  become: yes
  with_items:
    - nginx-extras
    - passenger

- name: Copy HTML5 Boilerplate Configs
  copy: src=h5bp dest=/etc/nginx/
  become: yes
  notify: Restart Nginx

- name: Create Default Site
  copy: src=site.default.conf dest=/etc/nginx/sites-available/default
  become: yes
  notify: Restart Nginx

- name: Allow Web Admins to Write Sites-Available
  acl:
    name: /etc/nginx/sites-available
    etype: group
    entity: web-admin
    permissions: rwx
    default: yes
    state: present
  become: yes

- name: Enable Default Site
  file:
    src:   /etc/nginx/sites-available/default
    dest:  /etc/nginx/sites-enabled/default
    state: link
  become: yes
  notify: Restart Nginx

- name: Create Log Directory
  file: path=/var/log/nginx state=directory mode=0755 owner=www-data group=www-data
  become: yes

- name: Create Main Coniguration
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  become: yes
  notify: Restart Nginx

- name: Copy HTML5 Boilerplate Main Config
  template: src=h5bp.conf.j2 dest=/etc/nginx/h5bp/basic.conf
  become: yes
  notify: Restart Nginx

- name: Copy mime.types
  file: src=mime.types dest=/etc/nginx/mime.types
  become: yes
  notify: Restart Nginx

- name: Create HTTP Root
  file:
    path: "{{ http_root }}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0775
  become: yes

- name: Allow Web Admins to Write HTTP Root
  acl:
    name: "{{ http_root }}"
    etype: group
    entity: web-admin
    permissions: rwx
    state: present
    recursive: yes
  become: yes

- name: Allow Web Admins Write to Future Directories in HTTP Root
  acl:
    name: "{{ http_root }}"
    etype: group
    entity: web-admin
    permissions: rwx
    default: yes
    state: present
    recursive: yes
  become: yes

- name: Do Not Mask Permissions on HTTP Root
  acl:
    name: "{{ http_root }}"
    etype: mask
    permissions: rwx
    state: present
    recursive: yes
  become: yes

- name: Do Not Mask Permissions of Future Directories in HTTP Root
  acl:
    name: "{{ http_root }}"
    etype: mask
    permissions: rwx
    default: yes
    state: present
    recursive: yes
  become: yes

- include: site.yml
  when: domain is defined
