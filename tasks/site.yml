---
- name: Configure Site SSL
  include_tasks: site_ssl.yml
  when: use_ssl

# Either we are in production with a typical flat filesystem, or Vagrant with a shared folder structure
# If it's vagrant, we assume the user has the user/group configured correctly, we just manage perms
- name: Create {{ domain }} Directory
  file: path={{ http_root }}/{{ domain }} state=directory mode=02775
  become: yes

- name: Create {{ domain }} Public Directory
  file: path={{ http_root }}/{{ domain }}/{{ public_directory }} state=directory mode=02775
  become: yes

- name: Copy {{ domain }} Config
  template:
    src:   site.conf.j2
    dest:  /etc/nginx/sites-available/{{ domain }}
    owner: root
    group: web-admin
    mode:  0660
  become: yes
  notify:
    - Restart Nginx
    - Restart Passenger App

- name: Activate {{ domain }}
  file:
    src:   /etc/nginx/sites-available/{{ domain }}
    dest:  /etc/nginx/sites-enabled/{{ domain }}
    state: link
  become: yes
  notify:
    - Restart Nginx
    - Restart Passenger App

- name: Create {{ domain }} Log Directory
  file:
    path:  /var/log/nginx/{{ domain }}
    state: directory
    owner: www-data
    group: www-data
    mode:  0750
  become: yes

- name: Copy index.html
  template:
    src: index.html.j2
    dest: "{{ http_root }}/{{ domain }}/{{ public_directory }}/index.html"
  when: copy_index

- name: Add {{ domain }} to Hosts File
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 {{ item }}"
    unsafe_writes: "{{ ansible_connection == 'docker' }}"
  become: yes
  loop:
    - "{{ domain }}"
    - www.{{domain }}
