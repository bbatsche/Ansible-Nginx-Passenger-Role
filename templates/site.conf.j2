# www to non-www redirect -- duplicate content is BAD:
# https://github.com/h5bp/html5-boilerplate/blob/5370479476dceae7cc3ea105946536d6bc0ee468/.htaccess#L362
# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
server {
  # don't forget to tell on which port this server listens
  listen [::]:80;
  listen 80;

  # listen on the www host
  server_name www.{{ domain }};

  # and redirect to the non-www host (declared below)
  return 301 $scheme://{{ domain }}$request_uri;
}

server {
  # listen [::]:80 accept_filter=httpready; # for FreeBSD
  # listen 80 accept_filter=httpready; # for FreeBSD
  # listen [::]:80 deferred; # for Linux
  # listen 80 deferred; # for Linux
  listen [::]:80;
  listen 80;

  # The host name to respond to
  server_name {{ domain }};

  # Path for static files
  root {{ http_root }}/{{ domain }}/public;

  #Specify a charset
  charset utf-8;

  # Set this for static access logs later on
  set $log_path var/log/nginx/{{ domain }};

  # Logs for local domain
  access_log /$log_path/access.log;
  error_log  /var/log/nginx/{{ domain }}/error.log;

{% if env_name == "dev" %}
  autoindex on;
{% endif %}

  # Skip access log and not found logging for favicons and robots.txt
  location = /favicon.ico {
    access_log off;
    log_not_found off;
  }

  location = /robots.txt {
    allow all;
    access_log off;
    log_not_found off;
  }

{% if site_type == "php" or site_type == "hhvm" %}
  index {{ "index.hh" if site_type == "hhvm" else "" }} index.php index.html index.htm;

  location / {
    {% if site_type == "hhvm" %}
      try_files $uri $uri/ /index.hh$is_args$args /index.php$is_args$args;
    {% elif dynamic_php %}
      try_files $uri $uri/ /index.php$is_args$args;
    {% else %}
      try_files $uri $uri/ =404;
    {% endif %}
  }

  location ~ {{ "\.php$" if site_type == "php" else "\.(hh|php)$" }} {
    {% if site_type == "php" -%}
      # regex to split $uri to $fastcgi_script_name and $fastcgi_path
      fastcgi_split_path_info ^(.+\.php)(/.+)$;
    {% endif %}

    try_files $fastcgi_script_name =404;

    # Bypass the fact that try_files resets $fastcgi_path_info
    # see: http://trac.nginx.org/nginx/ticket/321
    set $path_info $fastcgi_path_info;
    fastcgi_param PATH_INFO $path_info;

    fastcgi_index index.php;

    {% if env_name == "dev" -%}
      fastcgi_param LARAVEL_ENV local;
    {% endif %}

    include fastcgi.conf;

    {% if site_type == "php" -%}
      fastcgi_pass unix:/var/run/php5-fpm-{{ domain }}.sock;
    {% else -%}
      # Eventually directly managing HHVM repo in production will probably add some performance
      # improvements, but as yet there isn't a clear way to change the setting on a per host basis
      # fastcgi_param PHP_VALUE "hhvm.repo.local.path = /var/run/hhvm/{{ domain }}.hhbc";
      fastcgi_keep_conn on;
      fastcgi_pass unix:/var/run/hhvm/server.sock;
    {% endif %}
  }
{% else %}
  index index.html index.htm;
{% endif %}

{% if site_type in ["node", "python", "ruby"] %}
  passenger_enabled on;

  {% if env_name == "dev" %}
    passenger_env_name development;
  {% else %}
    passenger_env_name production;
  {% endif %}

  passenger_app_root {{ http_root }}/{{ domain }};

  {% if site_type == "node" %}
    passenger_app_type node;

    # Explicitly set node startup file. Passenger seems to require this.
    passenger_startup_file app.js;
    passenger_nodejs {{ nvm_root }}/versions/node/{{ node_version }}/bin/node;
  {% elif site_type == "ruby" %}
    passenger_app_type rack;
    passenger_ruby {{ rbenv_root }}/shims/ruby;
  {% elif site_type == "python" %}
    passenger_app_type wsgi;
    {% if env_name == "dev" %}
      passenger_python /usr/bin/python{{ python_version }};
    {% else %}
      passenger_python {{ http_root }}/{{ domain }}/env/bin/python;
    {% endif %}
  {% endif %}
{% endif %}

  # Include the basic h5bp config set
  include h5bp/basic.conf;
}
